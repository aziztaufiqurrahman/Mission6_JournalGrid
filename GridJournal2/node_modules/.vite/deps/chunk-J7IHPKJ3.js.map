{
  "version": 3,
  "sources": ["../../vuetify/src/components/VChipGroup/VChipGroup.tsx", "../../vuetify/src/components/VChip/VChip.tsx"],
  "sourcesContent": ["// Styles\nimport './VChipGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { deepEqual, defineComponent } from '@/util'\nimport { toRef } from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const VChipGroup = defineComponent({\n  name: 'VChipGroup',\n\n  props: {\n    column: Boolean,\n    filter: Boolean,\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n\n    ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained-text' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    return () => (\n      <props.tag\n        class={[\n          'v-chip-group',\n          {\n            'v-chip-group--column': props.column,\n          },\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    )\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n", "// Styles\nimport './VChip.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VChip = defineComponent({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    closable: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'span' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained-text' } as const),\n  },\n\n  emits: {\n    'click:close': (e: Event) => true,\n    'update:active': (value: Boolean) => true,\n    'update:modelValue': (value: Boolean) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { elevationClasses } = useElevation(props)\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { densityClasses } = useDensity(props)\n    const link = useLink(props, attrs)\n\n    function onCloseClick (e: Event) {\n      isActive.value = false\n\n      emit('click:close', e)\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar)\n      const hasColor = !group || group.isSelected.value\n      const isClickable = !props.disabled && (!!group || link.isClickable.value || props.link)\n      const onClickFunc = props.link ? props.link : group?.toggle\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          v-ripple={ [isClickable && props.ripple, null] }\n          onClick={ isClickable && onClickFunc }\n        >\n          { genOverlays(isClickable, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition>\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { slots.filter\n                  ? slots.filter()\n                  : <VIcon icon={ props.filterIcon } />\n                }\n              </div>\n            </VExpandXTransition>\n          ) }\n\n          { hasPrepend && (\n            <div class=\"v-chip__prepend\">\n              { slots.prepend\n                ? slots.prepend()\n                : (\n                  <VAvatar\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { slots.default?.({\n            isSelected: group?.isSelected.value,\n            selectedClass: group?.selectedClass.value,\n            select: group?.select,\n            toggle: group?.toggle,\n            value: group?.value.value,\n            disabled: props.disabled,\n          }) ?? props.text }\n\n          { hasAppend && (\n            <div class=\"v-chip__append\">\n              { slots.append\n                ? slots.append()\n                : (\n                  <VAvatar\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { hasClose && (\n            <div\n              class=\"v-chip__close\"\n              onClick={ onCloseClick }\n            >\n              { slots.close\n                ? slots.close({ props: { onClick: onCloseClick } })\n                : (\n                  <VIcon\n                    icon={ props.closeIcon }\n                    size=\"x-small\"\n                  />\n                )\n              }\n            </div>\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAgBO,IAAM,mBAAmB,OAAO,IAAI,sBAAX;AAEzB,IAAM,aAAa,gBAAgB;EACxC,MAAM;EAEN,OAAO;IACL,QAAQ;IACR,QAAQ;IACR,iBAAiB;MACf,MAAM;MACN,SAAS;IAFM;KAKd,eAAe;IAAE,eAAe;EAAjB,CAAD,IACd,aAAY,IACZ,eAAc,IACd,iBAAiB;IAAE,SAAS;EAAX,CAAD;EAGrB,OAAO;IACL,qBAAsB,WAAe;EADhC;EAIP,MAAO,OAAF,MAAoB;AAAA,QAAX;MAAE;QAAS;AACvB,UAAM;MAAE;QAAiB,aAAa,KAAD;AACrC,UAAM;MAAE;MAAY;MAAQ;MAAM;MAAM;QAAa,SAAS,OAAO,gBAAR;AAE7D,oBAAgB;MACd,OAAO;QACL,OAAO,MAAM,OAAO,OAAR;QACZ,QAAQ,MAAM,OAAO,QAAR;QACb,SAAS,MAAM,OAAO,SAAR;MAHT;IADO,CAAD;AAQf,WAAO,MAAA;AAAA,UAAA;AAAA,aAAA,YAAA,MAAA,KAAA;QAAA,SAEI,CACL,gBACA;UACE,wBAAwB,MAAM;QADhC,GAGA,aAAa,KALR;MAFJ,GAAA;QAAA,SAAA,MAAA,CAAA,kBAUD,MAAM,YAVL,OAAA,SAUD,eAAA,KAAA,OAAgB;UAChB;UACA;UACA;UACA;UACA,UAAU,SAAS;QALH,CAAX,CAVJ;MAAA,CAAA;IAAA;EAmBR;AApDuC,CAAD;;;AClBzC;AA2BO,IAAM,QAAQ,gBAAgB;EACnC,MAAM;EAEN,YAAY;IAAE;EAAF;EAEZ,OAAO;IACL,aAAa;IACb,cAAc;IACd,YAAY;IACZ,UAAU;IACV,WAAW;MACT,MAAM;MACN,SAAS;IAFA;IAIX,YAAY;MACV,MAAM;MACN,SAAS;IAFC;IAIZ,WAAW;IACX,QAAQ;IACR,YAAY;MACV,MAAM;MACN,SAAS;IAFC;IAIZ,OAAO;IACP,MAAM;IACN,MAAM;IACN,eAAe;IACf,aAAa;IACb,QAAQ;MACN,MAAM;MACN,SAAS;IAFH;IAIR,MAAM;IACN,YAAY;MACV,MAAM;MACN,SAAS;IAFC;KAKT,gBAAe,IACf,iBAAgB,IAChB,mBAAkB,IAClB,mBAAkB,IAClB,iBAAgB,IAChB,gBAAe,IACf,cAAa,IACb,aAAa;IAAE,KAAK;EAAP,CAAD,IACZ,eAAc,IACd,iBAAiB;IAAE,SAAS;EAAX,CAAD;EAGrB,OAAO;IACL,eAAgB,OAAa;IAC7B,iBAAkB,WAAmB;IACrC,qBAAsB,WAAmB;EAHpC;EAMP,MAAO,OAAF,MAAiC;AAAA,QAAxB;MAAE;MAAO;MAAM;QAAS;AACpC,UAAM,WAAW,gBAAgB,OAAO,YAAR;AAEhC,UAAM;MAAE;QAAiB,aAAa,KAAD;AACrC,UAAM;MAAE;QAAkB,UAAU,KAAD;AACnC,UAAM;MAAE;MAAc;MAAa;QAAmB,WAAW,KAAD;AAChE,UAAM;MAAE;QAAqB,aAAa,KAAD;AACzC,UAAM,QAAQ,aAAa,OAAO,kBAAkB,KAA1B;AAC1B,UAAM;MAAE;QAAmB,WAAW,KAAD;AACrC,UAAM;MAAE;QAAgB,QAAQ,KAAD;AAC/B,UAAM;MAAE;QAAmB,WAAW,KAAD;AACrC,UAAM,OAAO,QAAQ,OAAO,KAAR;AAEpB,0BAAuB,GAAU;AAC/B,eAAS,QAAQ;AAEjB,WAAK,eAAe,CAAhB;IACL;AAED,WAAO,MAAM;AAAA,UAAA,gBAAA;AACX,YAAM,MAAO,KAAK,OAAO,QAAS,MAAM,MAAM;AAC9C,YAAM,YAAY,CAAC,CAAE,OAAM,UAAU,MAAM,cAAc,MAAM;AAC/D,YAAM,WAAW,CAAC,CAAE,OAAM,SAAS,MAAM;AACzC,YAAM,YAAY,CAAC,CAAE,OAAM,UAAU,MAAM,WAAW;AACtD,YAAM,aAAa,CAAC,CAAE,OAAM,WAAW,MAAM,eAAe,MAAM;AAClE,YAAM,WAAW,CAAC,SAAS,MAAM,WAAW;AAC5C,YAAM,cAAc,CAAC,MAAM,YAAa,EAAC,CAAC,SAAS,KAAK,YAAY,SAAS,MAAM;AACnF,YAAM,cAAc,MAAM,OAAO,MAAM,OAAO,SAA1B,OAAA,SAA0B,MAAO;AAErD,aAAO,SAAS,SAAT,eAAA,YAAA,KAAA;QAAA,SAEI,CACL,UACA;UACE,oBAAoB,MAAM;UAC1B,iBAAiB,MAAM;UACvB,gBAAgB;UAChB,gBAAgB,MAAM;QAJxB,GAMA,aAAa,OACb,cAAc,OACd,WAAW,aAAa,QAAQ,QAChC,eAAe,OACf,iBAAiB,OACjB,eAAe,OACf,YAAY,OACZ,eAAe,OACf,SAhBK,OAAA,SAgBL,MAAO,cAAc,KAhBhB;QAFJ,SAoBI,CACL,WAAW,YAAY,QAAQ,MAD1B;QApBJ,YAuBQ,MAAM,YAAY;QAvB1B,aAwBS,MAAM;QAxBf,QAyBI,KAAK,KAAK;QAzBd,WA2BO,eAAe;MA3BtB,GAAA;QAAA,SAAA,MAAA,CA6BD,YAAY,aAAa,QAAd,GAEX,aAAS,YAAA,oBAAA,MAAA;UAAA,SAAA,MAAA,CAAA,eAAA,YAAA,OAAA;YAAA,SAGC;UAHD,GAAA,CAMH,MAAM,SACJ,MAAM,OAAN,IADF,YAAA,OAAA;YAAA,QAEgB,MAAM;UAFtB,GAAA,IAAA,CANG,CAAA,GAAA,CAAA,CAAA,OAII,MAAM,WAAW,KAJrB,CAAA,CAAA,CAAA;QAAA,CAAA,GAcT,cAAU,YAAA,OAAA;UAAA,SACC;QADD,GAAA,CAEN,MAAM,UACJ,MAAM,QAAN,IADF,YAAA,SAAA;UAAA,QAIW,MAAM;UAJjB,SAKY,MAAM;UALlB,QAMW,MAAM;QANjB,GAAA,IAAA,CAFM,CAAA,GA7CT,kBAAA,mBA4DD,MAAM,YA5DL,OAAA,SA4DD,gBAAA,KAAA,OAAgB;UAChB,YAAY,SAAF,OAAA,SAAE,MAAO,WAAW;UAC9B,eAAe,SAAF,OAAA,SAAE,MAAO,cAAc;UACpC,QAAQ,SAAF,OAAA,SAAE,MAAO;UACf,QAAQ,SAAF,OAAA,SAAE,MAAO;UACf,OAAO,SAAF,OAAA,SAAE,MAAO,MAAM;UACpB,UAAU,MAAM;QANA,CAAX,MA5DJ,OAAA,iBAmEG,MAAM,MAEV,aAAS,YAAA,OAAA;UAAA,SACE;QADF,GAAA,CAEL,MAAM,SACJ,MAAM,OAAN,IADF,YAAA,SAAA;UAAA,QAIW,MAAM;UAJjB,SAKY,MAAM;UALlB,QAMW,MAAM;QANjB,GAAA,IAAA,CAFK,CAAA,GAeT,YAAQ,YAAA,OAAA;UAAA,SAEA;UAFA,WAGI;QAHJ,GAAA,CAKJ,MAAM,QACJ,MAAM,MAAM;UAAE,OAAO;YAAE,SAAS;UAAX;QAAT,CAAZ,IADF,YAAA,OAAA;UAAA,QAIW,MAAM;UAJjB,QAKS;QALT,GAAA,IAAA,CALI,CAAA,CApFP;MAAA,CAAA,GAAA,CAAA,CAAA,iBAAA,QAAA,GA0BS,eAAe,MAAM,QAAQ,IA1BtC,CAAA,CAAA;IAsGR;EACF;AA7LkC,CAAD;",
  "names": []
}
