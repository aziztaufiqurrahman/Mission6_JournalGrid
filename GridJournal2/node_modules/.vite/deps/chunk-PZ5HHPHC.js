import {
  VOverlay
} from "./chunk-33TAYWFI.js";
import {
  VDialogTransition
} from "./chunk-U3HAJG7B.js";
import {
  makeTransitionProps
} from "./chunk-2VVRXWOG.js";
import {
  useProxiedModel
} from "./chunk-XGHWVP2J.js";
import {
  genericComponent,
  getUid
} from "./chunk-UQ3Q3FRV.js";
import {
  __spreadValues,
  computed,
  createVNode,
  mergeProps
} from "./chunk-D573C25J.js";

// node_modules/vuetify/lib/components/VMenu/VMenu.mjs
import "D:/Muhammad Aziz Taufiqurrahman/Data Aziz Taufiqurrahman/Kuliah Polban/Semester 5/Pengembangan Web/TugasBesar/GridJournal/GridJournal2/node_modules/vuetify/lib/components/VMenu/VMenu.css";
var VMenu = genericComponent()({
  name: "VMenu",
  inheritAttrs: false,
  props: __spreadValues({
    disableKeys: Boolean,
    modelValue: Boolean,
    id: String
  }, makeTransitionProps({
    transition: {
      component: VDialogTransition
    }
  })),
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      attrs,
      slots
    } = _ref;
    const isActive = useProxiedModel(props, "modelValue");
    const uid = getUid();
    const id = computed(() => props.id || `v-menu-${uid}`);
    return () => {
      return createVNode(VOverlay, mergeProps({
        "modelValue": isActive.value,
        "onUpdate:modelValue": ($event) => isActive.value = $event,
        "class": ["v-menu"],
        "transition": props.transition,
        "absolute": true,
        "positionStrategy": "connected",
        "scrollStrategy": "reposition",
        "scrim": false,
        "activatorProps": {
          "aria-haspopup": "menu",
          "aria-expanded": String(isActive.value),
          "aria-owns": id.value
        }
      }, attrs), {
        default: slots.default,
        activator: slots.activator
      });
    };
  }
});

export {
  VMenu
};
//# sourceMappingURL=chunk-PZ5HHPHC.js.map
