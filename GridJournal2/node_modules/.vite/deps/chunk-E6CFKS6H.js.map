{
  "version": 3,
  "sources": ["../../vuetify/src/composables/focus.ts"],
  "sourcesContent": ["// Components\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface FocusProps {\n  focused: boolean\n  'onUpdate:focused': ((val: boolean) => void) | undefined\n}\n\n// Composables\nexport const makeFocusProps = propsFactory({\n  focused: Boolean,\n}, 'focus')\n\nexport function useFocus (\n  props: FocusProps,\n  name = getCurrentInstanceName()\n) {\n  const isFocused = useProxiedModel(props, 'focused')\n  const focusClasses = computed(() => {\n    return ({\n      [`${name}--focused`]: isFocused.value,\n    })\n  })\n\n  function focus () {\n    isFocused.value = true\n  }\n\n  function blur () {\n    isFocused.value = false\n  }\n\n  return { focusClasses, isFocused, focus, blur }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAcO,IAAM,iBAAiB,aAAa;EACzC,SAAS;AADgC,GAExC,OAFuC;AAInC,kBACL,OAEA;AAAA,MADA,OACA,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KADO,uBAAsB;AAE7B,QAAM,YAAY,gBAAgB,OAAO,SAAR;AACjC,QAAM,eAAe,SAAS,MAAM;AAClC,WAAQ;OACJ,GAAE,kBAAkB,UAAU;IAD1B;EAGT,CAJ4B;AAM7B,mBAAkB;AAChB,cAAU,QAAQ;EACnB;AAED,kBAAiB;AACf,cAAU,QAAQ;EACnB;AAED,SAAO;IAAE;IAAc;IAAW;IAAO;EAAlC;AACR;",
  "names": []
}
