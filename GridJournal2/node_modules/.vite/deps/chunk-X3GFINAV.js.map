{
  "version": 3,
  "sources": ["../../vuetify/src/directives/touch/index.ts"],
  "sourcesContent": ["// Types\nimport type {\n  DirectiveBinding,\n  ObjectDirective,\n} from 'vue'\n\n// Utilities\nimport { keys } from '@/util'\n\nexport interface TouchHandlers {\n  start?: (wrapperEvent: { originalEvent: TouchEvent } & TouchWrapper) => void\n  end?: (wrapperEvent: { originalEvent: TouchEvent } & TouchWrapper) => void\n  move?: (wrapperEvent: { originalEvent: TouchEvent } & TouchWrapper) => void\n  left?: (wrapper: TouchWrapper) => void\n  right?: (wrapper: TouchWrapper) => void\n  up?: (wrapper: TouchWrapper) => void\n  down?: (wrapper: TouchWrapper) => void\n}\n\nexport interface TouchWrapper extends TouchHandlers {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  touchendX: number\n  touchendY: number\n  offsetX: number\n  offsetY: number\n}\n\nexport interface TouchValue extends TouchHandlers {\n  parent?: boolean\n  options?: AddEventListenerOptions\n}\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\nexport interface TouchDirectiveBinding extends Omit<DirectiveBinding, 'value'> {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start?.({ originalEvent: event, ...wrapper })\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end?.({ originalEvent: event, ...wrapper })\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move?.({ originalEvent: event, ...wrapper })\n}\n\nfunction createHandlers (value: TouchHandlers = {}): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const value = binding.value\n  const target = value?.parent ? el.parentElement : el\n  const options = value?.options ?? { passive: true }\n  const uid = binding.instance?.$.uid // TODO: use custom uid generator\n\n  if (!target || !uid) return\n\n  const handlers = createHandlers(binding.value)\n\n  target._touchHandlers = target._touchHandlers ?? Object.create(null)\n  target._touchHandlers![uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName], options)\n  })\n}\n\nfunction unmounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const target = binding.value?.parent ? el.parentElement : el\n  const uid = binding.instance?.$.uid\n\n  if (!target?._touchHandlers || !uid) return\n\n  const handlers = target._touchHandlers[uid]\n\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n\n  delete target._touchHandlers[uid]\n}\n\nexport const Touch: ObjectDirective = {\n  mounted,\n  unmounted,\n}\n\nexport default Touch\n"],
  "mappings": "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",
  "names": []
}
