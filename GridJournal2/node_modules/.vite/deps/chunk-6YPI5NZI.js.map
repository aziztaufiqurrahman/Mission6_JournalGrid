{
  "version": 3,
  "sources": ["../../vuetify/src/components/VTextarea/VTextarea.tsx"],
  "sourcesContent": ["// Styles\nimport './VTextarea.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { convertToUnit, defineComponent, filterInputAttrs, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VTextarea = defineComponent({\n  name: 'VTextarea',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: {\n    autoGrow: Boolean,\n    autofocus: Boolean,\n    counter: [Boolean, Number, String] as PropType<true | number | string>,\n    counterValue: Function as PropType<(value: any) => number>,\n    hint: String,\n    persistentHint: Boolean,\n    prefix: String,\n    placeholder: String,\n    persistentPlaceholder: Boolean,\n    persistentCounter: Boolean,\n    noResize: Boolean,\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    maxRows: {\n      type: [Number, String],\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    suffix: String,\n\n    ...makeVInputProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'click:control': (e: MouseEvent) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function'\n        ? props.counterValue(model.value)\n        : (model.value || '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as undefined\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const isFocused = ref(false)\n    const controlHeight = ref('auto')\n    const textareaRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      isFocused.value ||\n      props.persistentPlaceholder\n    ))\n\n    const messages = computed(() => {\n      return props.messages.length\n        ? props.messages\n        : (isActive.value || props.persistentHint) ? props.hint : ''\n    })\n\n    function onFocus () {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus()\n      }\n\n      if (!isFocused.value) isFocused.value = true\n    }\n    function onControlClick (e: MouseEvent) {\n      onFocus()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = ''\n\n        emit('click:clear', e)\n      })\n    }\n\n    const sizerRef = ref<HTMLTextAreaElement>()\n    function calculateInputHeight () {\n      if (!props.autoGrow) return\n\n      nextTick(() => {\n        if (!sizerRef.value) return\n\n        const style = getComputedStyle(sizerRef.value)\n\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) +\n        parseFloat(style.getPropertyValue('--v-field-padding-bottom'))\n\n        const height = sizerRef.value.scrollHeight\n        const lineHeight = parseFloat(style.lineHeight)\n        const minHeight = parseFloat(props.rows) * lineHeight + padding\n        const maxHeight = parseFloat(props.maxRows!) * lineHeight + padding || Infinity\n\n        controlHeight.value = convertToUnit(Math.min(maxHeight, Math.max(minHeight, height ?? 0)))\n      })\n    }\n\n    onMounted(calculateInputHeight)\n    watch(model, calculateInputHeight)\n    watch(() => props.rows, calculateInputHeight)\n    watch(() => props.maxRows, calculateInputHeight)\n\n    let observer: ResizeObserver | undefined\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight)\n        observer.observe(sizerRef.value!)\n      } else {\n        observer?.disconnect()\n      }\n    })\n    onBeforeUnmount(() => {\n      observer?.disconnect()\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [{ modelValue: _, ...inputProps }] = filterInputProps(props)\n      const [fieldProps] = filterFieldProps(props)\n\n      return (\n        <VInput\n          v-model={ model.value }\n          class={[\n            'v-textarea',\n            {\n              'v-textarea--prefixed': props.prefix,\n              'v-textarea--suffixed': props.suffix,\n              'v-textarea--auto-grow': props.autoGrow,\n              'v-textarea--no-resize': props.noResize || props.autoGrow,\n            },\n          ]}\n          { ...rootAttrs }\n          { ...inputProps }\n          messages={ messages.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                style={{\n                  '--v-input-control-height': controlHeight.value,\n                }}\n                onClick:control={ onControlClick }\n                onClick:clear={ onClear }\n                role=\"textbox\"\n                { ...fieldProps }\n                active={ isActive.value || isDirty.value }\n                dirty={ isDirty.value || props.dirty }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      { props.prefix && (\n                        <span class=\"v-text-field__prefix\">\n                          { props.prefix }\n                        </span>\n                      ) }\n\n                      <textarea\n                        ref={ textareaRef }\n                        class={ fieldClass }\n                        v-model={ model.value }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        placeholder={ props.placeholder }\n                        rows={ props.rows }\n                        name={ props.name }\n                        onFocus={ onFocus }\n                        onBlur={ () => (isFocused.value = false) }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      { props.autoGrow && (\n                        <textarea\n                          class={[\n                            fieldClass,\n                            'v-textarea__sizer',\n                          ]}\n                          v-model={ model.value }\n                          ref={ sizerRef }\n                          readonly\n                          aria-hidden=\"true\"\n                        />\n                      )}\n\n                      { props.suffix && (\n                        <span class=\"v-text-field__suffix\">\n                          { props.suffix }\n                        </span>\n                      ) }\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasCounter ? () => (\n              <>\n                <span />\n\n                <VCounter\n                  active={ props.persistentCounter || isFocused.value }\n                  value={ counterValue.value }\n                  max={ max.value }\n                  v-slots={ slots.counter }\n                />\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return useForwardRef({}, vInputRef, vFieldRef, textareaRef)\n  },\n})\n\nexport type VTextarea = InstanceType<typeof VTextarea>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAsBO,IAAM,YAAY,gBAAgB;EACvC,MAAM;EAEN,YAAY;IAAE;EAAF;EAEZ,cAAc;EAEd,OAAO;IACL,UAAU;IACV,WAAW;IACX,SAAS,CAAC,SAAS,QAAQ,MAAlB;IACT,cAAc;IACd,MAAM;IACN,gBAAgB;IAChB,QAAQ;IACR,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;IACV,MAAM;MACJ,MAAM,CAAC,QAAQ,MAAT;MACN,SAAS;MACT,WAAY,OAAW,CAAC,MAAM,WAAW,CAAD,CAAX;IAHzB;IAKN,SAAS;MACP,MAAM,CAAC,QAAQ,MAAT;MACN,WAAY,OAAW,CAAC,MAAM,WAAW,CAAD,CAAX;IAFtB;IAIT,QAAQ;KAEL,gBAAe,IACf,gBAAe;EAGpB,OAAO;IACL,eAAgB,OAAkB;IAClC,iBAAkB,OAAkB;IACpC,qBAAsB,SAAgB;EAHjC;EAMP,MAAO,OAAF,MAAiC;AAAA,QAAxB;MAAE;MAAO;MAAM;QAAS;AACpC,UAAM,QAAQ,gBAAgB,OAAO,YAAR;AAC7B,UAAM,eAAe,SAAS,MAAM;AAClC,aAAO,OAAO,MAAM,iBAAiB,aACjC,MAAM,aAAa,MAAM,KAAzB,IACC,OAAM,SAAS,IAAI,SAApB,EAA+B;IACpC,CAJ4B;AAK7B,UAAM,MAAM,SAAS,MAAM;AACzB,UAAI,MAAM;AAAW,eAAO,MAAM;AAElC,UACE,CAAC,MAAM,WACN,OAAO,MAAM,YAAY,YAC1B,OAAO,MAAM,YAAY;AACzB,eAAO;AAET,aAAO,MAAM;IACd,CAVmB;AAYpB,yBACE,gBACA,SACA;AAAA,UAAA,mBAAA;AACA,UAAI,CAAC,MAAM,aAAa,CAAC;AAAgB;AAEzC,MAAA,qBAAC,QAAQ,GAAG,WAAZ,OAAA,SAAA,yBAAA,kBAAyC,UAAzC,OAAA,SAAA,sBAAA,KAAA,iBAAA;IACD;AAED,UAAM,YAAY,IAAG;AACrB,UAAM,YAAY,IAAG;AACrB,UAAM,YAAY,IAAI,KAAD;AACrB,UAAM,gBAAgB,IAAI,MAAD;AACzB,UAAM,cAAc,IAAG;AACvB,UAAM,WAAW,SAAS,MACxB,UAAU,SACV,MAAM,qBAFiB;AAKzB,UAAM,WAAW,SAAS,MAAM;AAC9B,aAAO,MAAM,SAAS,SAClB,MAAM,WACL,SAAS,SAAS,MAAM,iBAAkB,MAAM,OAAO;IAC7D,CAJwB;AAMzB,uBAAoB;AAClB,UAAI,YAAY,UAAU,SAAS,eAAe;AAAA,YAAA;AAChD,QAAA,sBAAA,YAAY,UAAZ,OAAA,SAAA,mBAAmB,MAAnB;MACD;AAED,UAAI,CAAC,UAAU;AAAO,kBAAU,QAAQ;IACzC;AACD,4BAAyB,GAAe;AACtC,cAAO;AAEP,WAAK,iBAAiB,CAAlB;IACL;AACD,qBAAkB,GAAe;AAC/B,QAAE,gBAAF;AAEA,cAAO;AAEP,eAAS,MAAM;AACb,cAAM,QAAQ;AAEd,aAAK,eAAe,CAAhB;MACL,CAJO;IAKT;AAED,UAAM,WAAW,IAAG;AACpB,oCAAiC;AAC/B,UAAI,CAAC,MAAM;AAAU;AAErB,eAAS,MAAM;AACb,YAAI,CAAC,SAAS;AAAO;AAErB,cAAM,QAAQ,iBAAiB,SAAS,KAAV;AAE9B,cAAM,UAAU,WAAW,MAAM,iBAAiB,uBAAvB,CAAD,IAC1B,WAAW,MAAM,iBAAiB,0BAAvB,CAAD;AAEV,cAAM,SAAS,SAAS,MAAM;AAC9B,cAAM,aAAa,WAAW,MAAM,UAAP;AAC7B,cAAM,YAAY,WAAW,MAAM,IAAP,IAAe,aAAa;AACxD,cAAM,YAAY,WAAW,MAAM,OAAP,IAAmB,aAAa,WAAW;AAEvE,sBAAc,QAAQ,cAAc,KAAK,IAAI,WAAW,KAAK,IAAI,WAAW,UAApB,OAAoB,SAAU,CAA9B,CAApB,CAAD;MACpC,CAdO;IAeT;AAED,cAAU,oBAAD;AACT,UAAM,OAAO,oBAAR;AACL,UAAM,MAAM,MAAM,MAAM,oBAAnB;AACL,UAAM,MAAM,MAAM,SAAS,oBAAtB;AAEL,QAAI;AACJ,UAAM,UAAU,SAAO;AACrB,UAAI,KAAK;AACP,mBAAW,IAAI,eAAe,oBAAnB;AACX,iBAAS,QAAQ,SAAS,KAA1B;MACD,OAAM;AAAA,YAAA;AACL,QAAA,aAAA,aAAQ,OAAR,SAAA,UAAU,WAAV;MACD;IACF,CAPI;AAQL,oBAAgB,MAAM;AAAA,UAAA;AACpB,MAAA,cAAA,aAAQ,OAAR,SAAA,WAAU,WAAV;IACD,CAFc;AAIf,cAAU,MAAM;AACd,YAAM,aAAa,CAAC,CAAE,OAAM,WAAW,MAAM,WAAW,MAAM;AAC9D,YAAM,CAAC,WAAW,cAAc,iBAAiB,KAAD;AAChD,YAAO,OAAoC,iBAAiB,KAAD,GAApD,SAAE;oBAAY;UAAd,IAAoB,uBAApB,IAAoB;QAAlB;;AACT,YAAM,CAAC,cAAc,iBAAiB,KAAD;AAErC,aAAA,YAAA,QAAA,WAAA;QAAA,cAEc,MAAM;QAFpB,uBAAA,YAEc,MAAM,QAFpB;QAAA,SAGW,CACL,cACA;UACE,wBAAwB,MAAM;UAC9B,wBAAwB,MAAM;UAC9B,yBAAyB,MAAM;UAC/B,yBAAyB,MAAM,YAAY,MAAM;QAJnD,CAFK;MAHX,GAYS,WACA,YAbT;QAAA,YAce,SAAS;MAdxB,CAAA,GAAA,iCAiBS,QAjBT;QAkBM,SAAS,WAAA;AAAA,cAAC;YACR;YACA;YACA;YACA;cAJO;AAAA,iBAAA,YAAA,QAAA,WAAA;YAAA,SAOE;cACL,4BAA4B,cAAc;YADrC;YAPF,mBAUa;YAVb,iBAWW;YAXX,QAYA;UAZA,GAaA,YAbA;YAAA,UAcI,SAAS,SAAS,QAAQ;YAd9B,SAeG,QAAQ,SAAS,MAAM;YAf1B,WAgBK,UAAU;YAhBf,SAiBG,QAAQ,UAAU;UAjBrB,CAAA,GAAA,iCAoBA,QApBA;YAqBH,SAAS,WAAA;AAAA,kBACA;gBAAP,OAAO;kBADA,OACA,WAAE;uBAAO;kBAAT,KAAwB,sBAAxB,KAAwB;gBAAtB;;AADF,qBAAA,YAAA,UAAA,MAAA,CAIH,MAAM,UAAN,YAAA,QAAA;gBAAA,SACY;cADZ,GAAA,CAEI,MAAM,MAFV,CAAA,GAJG,eAAA,YAAA,YAAA,WAAA;gBAAA,OAWG;gBAXH,SAYK;gBAZL,uBAAA,YAaO,MAAM,QAbb;gBAAA,aAiBS,MAAM;gBAjBf,YAkBQ,WAAW;gBAlBnB,YAmBQ,WAAW;gBAnBnB,eAoBW,MAAM;gBApBjB,QAqBI,MAAM;gBArBV,QAsBI,MAAM;gBAtBV,WAuBO;gBAvBP,UAwBM,MAAO,UAAU,QAAQ;cAxB/B,GAyBE,WACA,UA1BF,GAAA,IAAA,GAAA,CAAA,CAAA,YAaO,MAAM,KAbb,GAAA,CAAA,iBAAA,WAAA,GAcW;gBACZ,SAAS;cADG,GAEX,MAhBA;gBAAA,MAAA;cAAA,CAAA,CAAA,CAAA,GA6BH,MAAM,YAAN,eAAA,YAAA,YAAA;gBAAA,SAES,CACL,YACA,mBAFK;gBAFT,uBAAA,YAMY,MAAM,QANlB;gBAAA,OAOQ;gBAPR,YAAA;gBAAA,eASc;cATd,GAAA,IAAA,GAAA,CAAA,CAAA,YAMY,MAAM,KANlB,CAAA,CAAA,GAaA,MAAM,UAAN,YAAA,QAAA;gBAAA,SACY;cADZ,GAAA,CAEI,MAAM,MAFV,CAAA,CA1CG,CAAA;YAAA;UArBN,EAAA;QAAA;QAyET,SAAS,aAAa,MAAA,YAAA,UAAA,MAAA,CAAA,YAAA,QAAA,MAAA,IAAA,GAAA,YAAA,UAAA;UAAA,UAKP,MAAM,qBAAqB,UAAU;UAL9B,SAMR,aAAa;UANL,OAOV,IAAI;QAPM,GAQN,MAAM,OARA,CAAA,CAAA,IAWlB;MAtGV,EAAA;IA0GD,CAhHQ;AAkHT,WAAO,cAAc,CAAA,GAAI,WAAW,WAAW,WAA3B;EACrB;AAtQsC,CAAD;",
  "names": []
}
