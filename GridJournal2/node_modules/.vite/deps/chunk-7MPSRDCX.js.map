{
  "version": 3,
  "sources": ["../../vuetify/src/components/VTimeline/shared.ts", "../../vuetify/src/components/VTimeline/VTimelineDivider.tsx", "../../vuetify/src/components/VTimeline/VTimelineItem.tsx", "../../vuetify/src/components/VTimeline/VTimeline.tsx"],
  "sourcesContent": ["import type { InjectionKey, Ref } from 'vue'\nimport type { Density } from '@/composables/density'\n\nexport interface TimelineInstance {\n  density: Ref<Density>\n  lineColor: Ref<string>\n}\n\nexport const VTimelineSymbol: InjectionKey<TimelineInstance> = Symbol.for('vuetify:timeline')\n", "// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VTimelineSymbol } from './shared'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\n\n// Utilities\nimport { defineComponent, inject, toRef } from 'vue'\n\nexport const VTimelineDivider = defineComponent({\n  name: 'VTimelineDivider',\n\n  props: {\n    hideDot: Boolean,\n    lineColor: String,\n    icon: String,\n    iconColor: String,\n    fillDot: Boolean,\n    dotColor: String,\n\n    ...makeRoundedProps(),\n    ...makeSizeProps(),\n    ...makeElevationProps(),\n  },\n\n  setup (props, { slots }) {\n    const timeline = inject(VTimelineSymbol)\n\n    if (!timeline) throw new Error('[Vuetify] Could not find v-timeline provider')\n\n    const { sizeClasses, sizeStyles } = useSize(props, 'v-timeline-divider__dot')\n    const { backgroundColorStyles, backgroundColorClasses } = useBackgroundColor(toRef(props, 'dotColor'))\n    const { backgroundColorStyles: lineColorStyles, backgroundColorClasses: lineColorClasses } = useBackgroundColor(timeline.lineColor)\n    const { roundedClasses } = useRounded(props, 'v-timeline-divider__dot')\n    const { elevationClasses } = useElevation(props)\n\n    return () => (\n      <div\n        class={[\n          'v-timeline-divider',\n          {\n            'v-timeline-divider--fill-dot': props.fillDot,\n          },\n        ]}\n      >\n        { !props.hideDot && (\n          <div\n            class={[\n              'v-timeline-divider__dot',\n              roundedClasses.value,\n              sizeClasses.value,\n              elevationClasses.value,\n            ]}\n            // @ts-expect-error: null\n            style={ sizeStyles.value }\n          >\n            <div\n              class={[\n                'v-timeline-divider__inner-dot',\n                roundedClasses.value,\n                backgroundColorClasses.value,\n              ]}\n              style={ backgroundColorStyles.value }\n            >\n              {\n                slots.default ? slots.default({ icon: props.icon, iconColor: props.iconColor, size: props.size })\n                : props.icon ? <VIcon icon={ props.icon } color={ props.iconColor } size={ props.size } />\n                : undefined\n              }\n            </div>\n          </div>\n        ) }\n        <div\n          class={[\n            'v-timeline-divider__line',\n            lineColorClasses.value,\n          ]}\n          style={ lineColorStyles.value }\n        />\n      </div>\n    )\n  },\n})\n\nexport type VTimelineDivider = InstanceType<typeof VTimelineDivider>\n", "// Components\nimport { VTimelineSymbol } from './shared'\nimport { VTimelineDivider } from './VTimelineDivider'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { makeSizeProps } from '@/composables/size'\nimport { makeElevationProps } from '@/composables/elevation'\nimport { makeRoundedProps } from '@/composables/rounded'\n\n// Utilities\nimport { inject, ref, watch } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\n\nexport const VTimelineItem = defineComponent({\n  name: 'VTimelineItem',\n\n  props: {\n    dotColor: String,\n    fillDot: Boolean,\n    hideDot: Boolean,\n    hideOpposite: {\n      type: Boolean,\n      default: undefined,\n    },\n    icon: String,\n    iconColor: String,\n\n    ...makeRoundedProps(),\n    ...makeElevationProps(),\n    ...makeSizeProps(),\n    ...makeTagProps(),\n    ...makeDimensionProps(),\n  },\n\n  setup (props, { slots }) {\n    const timeline = inject(VTimelineSymbol)\n\n    if (!timeline) throw new Error('[Vuetify] Could not find v-timeline provider')\n\n    const { dimensionStyles } = useDimension(props)\n\n    const dotSize = ref(0)\n    const dotRef = ref<VTimelineDivider>()\n    watch(dotRef, newValue => {\n      if (!newValue) return\n      dotSize.value = newValue.$el.querySelector('.v-timeline-divider__dot')?.getBoundingClientRect().width ?? 0\n    }, {\n      flush: 'post',\n    })\n\n    return () => (\n      <div\n        class={[\n          'v-timeline-item',\n          {\n            'v-timeline-item--fill-dot': props.fillDot,\n          },\n        ]}\n        style={{\n          '--v-timeline-dot-size': convertToUnit(dotSize.value),\n        }}\n      >\n        <div\n          class=\"v-timeline-item__body\"\n          style={ dimensionStyles.value }\n        >\n          { slots.default?.() }\n        </div>\n\n        <VTimelineDivider\n          ref={ dotRef }\n          hideDot={ props.hideDot }\n          icon={ props.icon }\n          iconColor={ props.iconColor }\n          size={ props.size }\n          elevation={ props.elevation }\n          dotColor={ props.dotColor }\n          fillDot={ props.fillDot }\n          rounded={ props.rounded }\n          v-slots={{ default: slots.icon }}\n        />\n\n        { timeline.density.value !== 'compact' && (\n          <div class=\"v-timeline-item__opposite\">\n            { !props.hideOpposite && slots.opposite?.() }\n          </div>\n        ) }\n      </div>\n    )\n  },\n})\n", "// Styles\nimport './VTimeline.sass'\n\n// Components\nimport { VTimelineItem } from './VTimelineItem'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Helpers\nimport { computed, provide, toRef } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\nimport { VTimelineSymbol } from './shared'\n\n// Types\nimport type { Prop } from 'vue'\n\nexport type TimelineDirection = 'vertical' | 'horizontal'\nexport type TimelineSide = 'before' | 'after' | undefined\n\nexport const VTimeline = defineComponent({\n  name: 'VTimeline',\n\n  props: {\n    direction: {\n      type: String,\n      default: 'vertical',\n      validator: (v: any) => ['vertical', 'horizontal'].includes(v),\n    } as Prop<TimelineDirection>,\n    side: {\n      type: String,\n      validator: (v: any) => v == null || ['start', 'end'].includes(v),\n    } as Prop<TimelineSide>,\n    lineInset: {\n      type: [String, Number],\n      default: 0,\n    },\n    lineThickness: {\n      type: [String, Number],\n      default: 2,\n    },\n    lineColor: String,\n    truncateLine: {\n      type: String,\n      default: 'start',\n      validator: (v: any) => ['none', 'start', 'end', 'both'].includes(v),\n    },\n\n    ...makeDensityProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { densityClasses } = useDensity(props)\n\n    provide(VTimelineSymbol, {\n      density: toRef(props, 'density'),\n      lineColor: toRef(props, 'lineColor'),\n    })\n\n    const sideClass = computed(() => {\n      const side = props.side ? props.side : props.density !== 'default' ? 'end' : null\n\n      return side && `v-timeline--side-${side}`\n    })\n\n    return () => (\n      <props.tag\n        class={[\n          'v-timeline',\n          `v-timeline--${props.direction}`,\n          {\n            'v-timeline--inset-line': !!props.lineInset,\n            'v-timeline--truncate-line-end': props.truncateLine === 'end' || props.truncateLine === 'both',\n          },\n          themeClasses.value,\n          densityClasses.value,\n          sideClass.value,\n        ]}\n        style={{\n          '--v-timeline-line-thickness': convertToUnit(props.lineThickness),\n          '--v-timeline-line-inset': convertToUnit(props.lineInset),\n        }}\n      >\n        { (props.truncateLine === 'none' || props.truncateLine === 'end') && (\n          <VTimelineItem hideDot />\n        ) }\n\n        { slots.default?.() }\n      </props.tag>\n    )\n  },\n})\n"],
  "mappings": "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",
  "names": []
}
