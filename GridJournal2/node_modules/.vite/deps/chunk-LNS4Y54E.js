import {
  VToolbar,
  VToolbarTitle,
  filterToolbarProps,
  makeVToolbarProps
} from "./chunk-L4OVFUQY.js";
import {
  VBtn
} from "./chunk-3I7DFDXC.js";
import {
  useProxiedModel
} from "./chunk-XGHWVP2J.js";
import {
  makeLayoutItemProps,
  useLayoutItem
} from "./chunk-CR7WHPK5.js";
import {
  defineComponent
} from "./chunk-UQ3Q3FRV.js";
import {
  __spreadProps,
  __spreadValues,
  computed,
  createVNode,
  mergeProps,
  ref,
  toRef
} from "./chunk-D573C25J.js";

// node_modules/vuetify/lib/components/VAppBar/VAppBar.mjs
import "D:/Muhammad Aziz Taufiqurrahman/Data Aziz Taufiqurrahman/Kuliah Polban/Semester 5/Pengembangan Web/TugasBesar/GridJournal/GridJournal2/node_modules/vuetify/lib/components/VAppBar/VAppBar.css";
var VAppBar = defineComponent({
  name: "VAppBar",
  props: __spreadProps(__spreadValues(__spreadValues({
    modelValue: {
      type: Boolean,
      default: true
    },
    position: {
      type: String,
      default: "top",
      validator: (value) => ["top", "bottom"].includes(value)
    }
  }, makeVToolbarProps()), makeLayoutItemProps()), {
    height: {
      type: [Number, String],
      default: 64
    }
  }),
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const vToolbarRef = ref();
    const isActive = useProxiedModel(props, "modelValue");
    const height = computed(() => {
      var _vToolbarRef$value;
      return (_vToolbarRef$value = vToolbarRef.value) == null ? void 0 : _vToolbarRef$value.contentHeight;
    });
    const {
      layoutItemStyles
    } = useLayoutItem({
      id: props.name,
      priority: computed(() => parseInt(props.priority, 10)),
      position: toRef(props, "position"),
      layoutSize: height,
      elementSize: height,
      active: isActive,
      absolute: toRef(props, "absolute")
    });
    return () => {
      const [toolbarProps] = filterToolbarProps(props);
      return createVNode(VToolbar, mergeProps({
        "ref": vToolbarRef,
        "class": ["v-app-bar", {
          "v-app-bar--bottom": props.position === "bottom"
        }],
        "style": layoutItemStyles.value
      }, toolbarProps), slots);
    };
  }
});

// node_modules/vuetify/lib/components/VAppBar/VAppBarNavIcon.mjs
var VAppBarNavIcon = defineComponent({
  name: "VAppBarNavIcon",
  props: {
    icon: {
      type: String,
      default: "$menu"
    }
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    return () => {
      var _slots$default;
      return createVNode(VBtn, {
        "class": "v-app-bar-nav-icon",
        "icon": props.icon
      }, {
        default: () => [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)]
      });
    };
  }
});

// node_modules/vuetify/lib/components/VAppBar/VAppBarTitle.mjs
var VAppBarTitle = defineComponent(__spreadProps(__spreadValues({}, VToolbarTitle), {
  name: "VAppBarTitle",
  setup(_, _ref) {
    let {
      slots
    } = _ref;
    return () => createVNode(VToolbarTitle, {
      "class": "v-app-bar-title"
    }, slots);
  }
}));

export {
  VAppBar,
  VAppBarNavIcon,
  VAppBarTitle
};
//# sourceMappingURL=chunk-LNS4Y54E.js.map
