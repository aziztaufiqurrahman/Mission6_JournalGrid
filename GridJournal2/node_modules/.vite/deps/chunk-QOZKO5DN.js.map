{
  "version": 3,
  "sources": ["../../vuetify/src/composables/elevation.ts"],
  "sourcesContent": ["// Utilities\nimport { computed, isRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nexport interface ElevationProps {\n  elevation?: number | string | null\n}\n\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator (v: any) {\n      const value = parseInt(v)\n\n      return (\n        !isNaN(value) &&\n        value >= 0 &&\n        // Material Design has a maximum elevation of 24\n        // https://material.io/design/environment/elevation.html#default-elevations\n        value <= 24\n      )\n    },\n  },\n}, 'elevation')\n\ntype ElevationData = {\n  elevationClasses: Ref<string[]>\n}\n\nexport function useElevation (props: ElevationProps | Ref<number | string | undefined>): ElevationData {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation\n    const classes: string[] = []\n\n    if (elevation == null) return classes\n\n    classes.push(`elevation-${elevation}`)\n\n    return classes\n  })\n\n  return { elevationClasses }\n}\n"],
  "mappings": ";;;;;;;;;AAWO,IAAM,qBAAqB,aAAa;EAC7C,WAAW;IACT,MAAM,CAAC,QAAQ,MAAT;IACN,UAAW,GAAQ;AACjB,YAAM,QAAQ,SAAS,CAAD;AAEtB,aACE,CAAC,MAAM,KAAD,KACN,SAAS,KAGT,SAAS;IAEZ;EAZQ;AADkC,GAe5C,WAf2C;AAqBvC,sBAAuB,OAAyE;AACrG,QAAM,mBAAmB,SAAS,MAAM;AACtC,UAAM,YAAY,MAAM,KAAD,IAAU,MAAM,QAAQ,MAAM;AACrD,UAAM,UAAoB,CAAA;AAE1B,QAAI,aAAa;AAAM,aAAO;AAE9B,YAAQ,KAAM,aAAY,WAA1B;AAEA,WAAO;EACR,CATgC;AAWjC,SAAO;IAAE;EAAF;AACR;",
  "names": []
}
